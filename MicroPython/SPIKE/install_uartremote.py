import ubinascii, uos, machine,uhashlib
from ubinascii import hexlify
b64="""
"""

def calc_hash(b):
    return hexlify(uhashlib.sha256(b).digest()).decode()

# this is the hash of the compiled uartremote.mpy
hash_gen='965ccc80fe50af678c024b0d8624421487b46ff7f46ba2c59a8b098841565a54'

uartremote=ubinascii.a2b_base64(b64)
hash_initial=calc_hash(uartremote)

try: # remove any old versions of uartremote library
    uos.remove('/projects/uartremote.py')
    uos.remove('/projects/uartremote.mpy')
except OSError:
    pass

print('writing uartremote.mpy to folder /projects')
with open('/projects/uartremote.mpy','wb') as f:
    f.write(uartremote)
print('Finished writing uartremote.mpy.')
print('Checking hash.')
uartremote_check=open('/projects/uartremote.mpy','rb').read()
hash_check=calc_hash(uartremote_check)

print('Hash generated: ',hash_gen)
error=False
if hash_initial != hash_gen:
    print('Failed hash of base64 input : '+hash_initial)
    error=True
if hash_check != hash_gen:
    print('Failed hash of .mpy on SPIKE: '+hash_check)
    error=True

if not error:
    print('Uartremote library written succesfully. Resetting....')
    machine.reset()
else:
    print('Failure in Uartremote library!')

